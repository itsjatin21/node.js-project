name: Deploy Node.js App to Minikube

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-login-chat-app:latest .

      - name: Push docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-login-chat-app:latest

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Start Minikube
        run: minikube start --driver=docker

      - name: Verify Minikube Status
        run: |
          until minikube status | grep -q "Running"; do
            echo "Waiting for Minikube to be ready..."
            sleep 5
          done
          minikube status

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          touch $HOME/.kube/config
          minikube update-context
          kubectl config use-context minikube

      - name: Pull docker image
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/nodejs-login-chat-app:latest || { echo "Error pulling image"; exit 1; }

      - name: Check for deployment.yml
        run: |
          if [ ! -f deployment.yml ]; then
            echo "Error: deployment.yml does not exist"
            exit 1
          fi
          cat deployment.yml

      - name: Check for service.yml
        run: |
          if [ ! -f service.yml ]; then
            echo "Error: service.yml does not exist"
            exit 1
          fi
          cat service.yml

      - name: Validate Kubernetes manifests
        run: |
          kubectl apply --dry-run=client -f deployment.yml || { echo "Error validating deployment.yml"; exit 1; }
          kubectl apply --dry-run=client -f service.yml || { echo "Error validating service.yml"; exit 1; }

      - name: Deploy to Minikube
        run: |
          echo "Applying Kubernetes manifests"
          kubectl apply -f deployment.yml || { echo "Error applying deployment.yml"; exit 1; }
          kubectl apply -f service.yml || { echo "Error applying service.yml"; exit 1; }

      - name: Wait for Pods
        run: |
          echo "Waiting for pods to be ready..."
          kubectl wait --for=condition=ready pod -l app=nodejs-login-chat-app --timeout=360s

      - name: Debug Deployment
        run: |
          echo "Describing deployment"
          kubectl describe deployment nodejs-login-chat-app
          echo "Describing pods"
          kubectl describe pods -l app=nodejs-login-chat-app
          echo "Getting pod logs"
          pods=$(kubectl get pods -l app=nodejs-login-chat-app -o jsonpath='{.items[*].metadata.name}')
          for pod in $pods; do
            echo "Logs for pod $pod:"
            kubectl logs $pod || echo "No logs available for $pod"
          done

      - name: Verify deployment
        run: |
          echo "Checking pod status"
          kubectl get pods -o wide
          echo "Checking service status"
          minikube service nodejs-login-chat-app --url || echo "Warning: Service URL retrieval failed"

      - name: Notify deployment
        run: echo "Deployment successful! The application is now running on port 8080."